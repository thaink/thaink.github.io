<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.3">Jekyll</generator><link href="https://thaink.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://thaink.github.io/" rel="alternate" type="text/html" /><updated>2018-06-18T15:35:38+09:00</updated><id>https://thaink.github.io/</id><title type="html">Coding&amp;amp;Hobbies</title><subtitle>Coding, C++, python, Image processing, Firmware, Driver and more</subtitle><author><name>Thai K. Nguyen</name></author><entry><title type="html">Jekyll custom plugins in Github page</title><link href="https://thaink.github.io/2018/06/custom-plugins-in-github-pages/" rel="alternate" type="text/html" title="Jekyll custom plugins in Github page" /><published>2018-06-18T14:42:06+09:00</published><updated>2018-06-18T14:42:06+09:00</updated><id>https://thaink.github.io/2018/06/custom-plugins-in-github-pages</id><content type="html" xml:base="https://thaink.github.io/2018/06/custom-plugins-in-github-pages/">&lt;p&gt;Github page, which uses Jekyll as it static site generator, is a very convinient way to host personal website. However, github only supports some official plugins they &lt;a href=&quot;https://pages.github.com/versions/&quot;&gt;listed&lt;/a&gt;, to use other plugins, you have to build the site yourself. In this post, I would like to discuss about their difficulties and how to overcome them.&lt;/p&gt;
&lt;h3 id=&quot;problems&quot;&gt;Problems&lt;/h3&gt;
&lt;p&gt;The first problem is of course github does not support custom plugins and they have a valid point to do so - sercurity. Allowing arbitrary code to run on their server is somewhat vulnerable and they don’t want to do so. Hence, I do not expect them to change that anytime soon. However, some plugins is really helpful, in my case, I need plugins to generated category, month archive and tag archive file automatically instead of the painful official way to generate each of them manually as &lt;a href=&quot;https://jekyllrb.com/docs/posts/#displaying-post-categories-or-tags&quot;&gt;guided&lt;/a&gt; when you add any tag or category.&lt;/p&gt;

&lt;p&gt;To overcome this this, the only way is to build the website your own and upload the static site to Github. I move all of my site source code to a &lt;code class=&quot;highlighter-rouge&quot;&gt;src/&lt;/code&gt; folder and build the static site to the main directory. However, the second problem comes in when you cannot set the distination folder including the source folder. Because of these tricky thing, I have to use a quite complex solution as bellowing.&lt;/p&gt;
&lt;h3 id=&quot;my-solution&quot;&gt;My solution&lt;/h3&gt;
&lt;h4 id=&quot;step-1&quot;&gt;Step 1.&lt;/h4&gt;
&lt;p&gt;To keep the code clean, I don’t want my development code and generated one to be mixed and also I dont want my commit history to be full of built logs, I create a branch named &lt;code class=&quot;highlighter-rouge&quot;&gt;develop&lt;/code&gt; and set it to the default branch, this branch will how the source code. The master branch will hold the static site. So, now I have two branches like this:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;branches:
-develop (default branch)
-master (hold static site)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;step-2&quot;&gt;Step 2.&lt;/h4&gt;
&lt;p&gt;In the &lt;code class=&quot;highlighter-rouge&quot;&gt;develop&lt;/code&gt; branch, I add a couple of file, the dirrectory look like this:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-src/  (to hold website jekyll code)
-build_Site.sh (to build the webiste for development)
-clean.sh (clean the built site)
-.gitignore (ignore the built files) 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In &lt;code class=&quot;highlighter-rouge&quot;&gt;.gitignore&lt;/code&gt;, I would like to exclude all files generated in the build process:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#ignore temporary files
_site
.sass-cache
src/*.gem
src/*.sublime-project
src/*.sublime-workspace
src/.bundle
src/.DS_Store
src/.jekyll-metadata
src/.sass-cache
src/_asset_bundler_cache
src/_site
src/codekit-config.json
src/Gemfile.lock
src/node_modules
src/npm-debug.log*
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In &lt;code class=&quot;highlighter-rouge&quot;&gt;clean.sh&lt;/code&gt;, all ignored files is deleted.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/sh&lt;/span&gt;
git clean &lt;span class=&quot;nt&quot;&gt;-fdX&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;In &lt;code class=&quot;highlighter-rouge&quot;&gt;build_Site.sh&lt;/code&gt;, I build the jekyll site to verify in the development processs:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/sh&lt;/span&gt;
./clean.sh
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;src
bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;jekyll build &lt;span class=&quot;nt&quot;&gt;--destination&lt;/span&gt; ../_site
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ../_site
jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Note that, the built site is in _site directory so you should run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt; there.&lt;/p&gt;
&lt;h4 id=&quot;step-3&quot;&gt;Step 3.&lt;/h4&gt;
&lt;p&gt;In the &lt;code class=&quot;highlighter-rouge&quot;&gt;master&lt;/code&gt; branch, my home directory looks like this:&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-src/ (will be updated from develop branch)
- build_Site.sh
- .gitignore (ignore the src folder)
- .nojekyll (avoid jekyll to build this directory)
- _config.yml (if .nojekyll does not work, exclude src folder from being built)
- files generated by Jekyll
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;my &lt;code class=&quot;highlighter-rouge&quot;&gt;build_Site.sh&lt;/code&gt; is as bellowing. Other files is as simple as they are described.&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/bin/sh&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; src
git checkout develop src/
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;src
bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;jekyll build &lt;span class=&quot;nt&quot;&gt;--destination&lt;/span&gt; ../_site

&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ..
rsync &lt;span class=&quot;nt&quot;&gt;-av&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--delete&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--exclude&lt;/span&gt; _site/ &lt;span class=&quot;nt&quot;&gt;--exclude&lt;/span&gt; src/ &lt;span class=&quot;nt&quot;&gt;--exclude&lt;/span&gt; .git/ &lt;span class=&quot;nt&quot;&gt;--exclude&lt;/span&gt; .gitignore &lt;span class=&quot;nt&quot;&gt;--exclude&lt;/span&gt; .nojekyll &lt;span class=&quot;nt&quot;&gt;--exclude&lt;/span&gt; _config.yml &lt;span class=&quot;nt&quot;&gt;--exclude&lt;/span&gt; build_Site.sh _site/ ./
&lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; _site
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;All my code can be viewed in the &lt;a href=&quot;https://github.com/thaink/thaink.github.io&quot;&gt;source code of this website&lt;/a&gt;. If you have any better solution to work around with this, please leave me a comment.&lt;/p&gt;</content><author><name>Thai K. Nguyen</name></author><category term="jekyll" /><category term="github" /><category term="website" /><summary type="html">Github page, which uses Jekyll as it static site generator, is a very convinient way to host personal website. However, github only supports some official plugins they listed, to use other plugins, you have to build the site yourself. In this post, I would like to discuss about their difficulties and how to overcome them. Problems The first problem is of course github does not support custom plugins and they have a valid point to do so - sercurity. Allowing arbitrary code to run on their server is somewhat vulnerable and they don’t want to do so. Hence, I do not expect them to change that anytime soon. However, some plugins is really helpful, in my case, I need plugins to generated category, month archive and tag archive file automatically instead of the painful official way to generate each of them manually as guided when you add any tag or category.</summary></entry></feed>